<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog | blog.cringe.live</title><link>http://localhost:1313/blog/</link><atom:link href="http://localhost:1313/blog/index.xml" rel="self" type="application/rss+xml"/><description>Blog</description><generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Sat, 12 Oct 2024 00:00:00 +0000</lastBuildDate><image><url>http://localhost:1313/media/icon_hu7729264130191091259.png</url><title>Blog</title><link>http://localhost:1313/blog/</link></image><item><title>When It Keeps Failing</title><link>http://localhost:1313/blog/when-it-keeps-failing/</link><pubDate>Sun, 07 Jul 2024 08:22:31 +0200</pubDate><guid>http://localhost:1313/blog/when-it-keeps-failing/</guid><description>&lt;!-- markdownlint-disable MD033 -->
&lt;p>Don&amp;rsquo;t give up! Just &lt;code>Invoke-UntilSuccess&lt;/code>! 😹&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-pwsh" data-lang="pwsh">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">&amp;lt;#
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">.&lt;/span>&lt;span class="sd">SYNOPSIS&lt;/span>&lt;span class="cm">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> This function executes a command until it succeeds.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">.&lt;/span>&lt;span class="sd">DESCRIPTION&lt;/span>&lt;span class="cm">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> The Invoke-UntilSuccess function takes a command as an argument and executes it.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> If the command fails, it retries the command until it succeeds.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> The function outputs the result of the command and whether the command was executed successfully or not.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">.PARAMETER commandStr
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> The command to be executed.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">.&lt;/span>&lt;span class="sd">EXAMPLE&lt;/span>&lt;span class="cm">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> Invoke-UntilSuccess git clone https://github.com/ka-de/polars
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">#&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Invoke-UntilSuccess&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">do&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$commandStr&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nv">$args&lt;/span> &lt;span class="n">-join&lt;/span> &lt;span class="s1">&amp;#39; &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Write-Host&lt;/span> &lt;span class="s2">&amp;#34;Executing command: &lt;/span>&lt;span class="nv">$commandStr&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$output&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">Invoke-Expression&lt;/span> &lt;span class="nv">$commandStr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Write-Host&lt;/span> &lt;span class="nv">$output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$exitCode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nv">$LASTEXITCODE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$exitCode&lt;/span> &lt;span class="o">-eq&lt;/span> &lt;span class="mf">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Write-Host&lt;/span> &lt;span class="s2">&amp;#34;Command executed successfully.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nv">$output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Write-Host&lt;/span> &lt;span class="s2">&amp;#34;Command failed with exit code &lt;/span>&lt;span class="nv">$exitCode&lt;/span>&lt;span class="s2">. Retrying...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$exitCode&lt;/span> &lt;span class="o">-ne&lt;/span> &lt;span class="mf">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">catch&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Write-Host&lt;/span> &lt;span class="s2">&amp;#34;An error occurred: &lt;/span>&lt;span class="nv">$_&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sorry! I just thought it was funny!&lt;/p>
&lt;p>Very silly of me, well, silly now truly defines me. It has penetrated every section of my life.&lt;/p>
&lt;p>On a more serious note, I think, the Rust compile times I get, especially when I keep adding &lt;code>bevy&lt;/code> first as a dependency just really ruin my eclectic experimentation cravings.
It is also directly affecting how much I&amp;rsquo;m working on the game I&amp;rsquo;m actually planning on releasing first. But I&amp;rsquo;m not procrastinating for much longer.&lt;/p>
&lt;p>3D has been always a fascinating thing for me. So while I&amp;rsquo;m technically supposed to be drawing pixel art I also fuck around with this:&lt;/p>
&lt;blockquote class="twitter-tweet" data-dnt="true">&lt;p lang="en" dir="ltr">The Rotate component is my favorite component! &lt;a href="https://t.co/iFYArzhcSi">pic.twitter.com/iFYArzhcSi&lt;/a>&lt;/p>&amp;mdash; _ka_de (@_ka_de) &lt;a href="https://twitter.com/_ka_de/status/1804096426948907434?ref_src=twsrc%5Etfw">June 21, 2024&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>and this:&lt;/p>
&lt;blockquote class="twitter-tweet" data-dnt="true">&lt;p lang="en" dir="ltr">It took me a while to figure out how to make the egui inspector and a camera controller play together nicely. &lt;a href="https://t.co/bNvx3y2nP2">pic.twitter.com/bNvx3y2nP2&lt;/a>&lt;/p>&amp;mdash; _ka_de (@_ka_de) &lt;a href="https://twitter.com/_ka_de/status/1803776705472897297?ref_src=twsrc%5Etfw">June 20, 2024&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>The amount of effort it takes to get from zero to a basic editor in a 3D space with basic camera controls with &lt;code>bevy&lt;/code> is minimal, and the code for it looks really neat too!&lt;/p>
&lt;h2 id="entity">Entity&lt;/h2>
&lt;hr>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">spawn_entity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">commands&lt;/span>: &lt;span class="nc">Commands&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">asset_server&lt;/span>: &lt;span class="nc">Res&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AssetServer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">materials&lt;/span>: &lt;span class="nc">ResMut&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Assets&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">StandardMaterial&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">model_path&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;models/entity.glb&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">entity_transform&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Transform&lt;/span>::&lt;span class="n">from_xyz&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">commands&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">spawn&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SceneBundle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">scene&lt;/span>: &lt;span class="nc">asset_server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GltfAssetLabel&lt;/span>::&lt;span class="n">Scene&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">from_asset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">model_path&lt;/span>&lt;span class="p">)),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">transform&lt;/span>: &lt;span class="nc">entity_transform&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">..&lt;/span>&lt;span class="n">default&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">},&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Rotate&lt;/span>::&lt;span class="n">default&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="component">Component&lt;/h2>
&lt;hr>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#[derive(Component, Debug, Reflect, InspectorOptions)]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">#[reflect(InspectorOptions)]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Rotate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">speed_x&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">speed_y&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">speed_z&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Default&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Rotate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">default&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="bp">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">speed_x&lt;/span>: &lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">speed_y&lt;/span>: &lt;span class="mf">1.0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">speed_z&lt;/span>: &lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="system">System&lt;/h2>
&lt;hr>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">rotate_meshes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">query&lt;/span>: &lt;span class="nc">Query&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Transform&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">Rotate&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">time&lt;/span>: &lt;span class="nc">Res&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Time&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transform&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rotate&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">query&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter_mut&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rotation&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Quat&lt;/span>::&lt;span class="n">from_euler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">EulerRot&lt;/span>::&lt;span class="no">XYZ&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">rotate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">speed_x&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">delta_seconds&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">rotate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">speed_y&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">delta_seconds&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">rotate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">speed_z&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">delta_seconds&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">transform&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rotate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rotation&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Well, something like that anyway, because &lt;code>bevy&lt;/code> is still young, the syntax keeps changing basically every 3 months or something and me and my friend kinda arrived a bit late for having fun with version 0.13.. because 0.14 just dropped and now I started to have mess around getting everything migrated to the new version.&lt;/p>
&lt;p>It is a painful and grueling process and I&amp;rsquo;m not really a fan of it, but, if I get over it, I&amp;rsquo;ll have more than 2 months where I&amp;rsquo;ll be able to concentrate on writing the actual game! 🐺&lt;/p>
&lt;p>I&amp;rsquo;ve been learning a lot of Rust in the meantime, and one of the consequences of it is that I&amp;rsquo;m really getting into the low-level workings of everything. I hope my small 🧠 will able to tolerate it!&lt;/p></description></item><item><title>Stars: The Cosmic Brokers</title><link>http://localhost:1313/blog/cosmic-brokers/</link><pubDate>Sat, 29 Jun 2024 11:49:11 +0200</pubDate><guid>http://localhost:1313/blog/cosmic-brokers/</guid><description>&lt;p>Did you know that every atom in your body was once part of a star? Stars, the celestial powerhouses that dot our night sky, play a crucial role as the brokers of elements in the universe.&lt;/p>
&lt;h2 id="the-stellar-forge">The Stellar Forge&lt;/h2>
&lt;hr>
&lt;p>Stars begin their lives as vast clouds of hydrogen and helium, the primordial elements forged in the Big Bang. Through gravitational collapse, these clouds condense into protostars that eventually ignite into full-fledged stars. The nuclear fusion reactions that power stars are the first step in their role as element brokers.&lt;/p>
&lt;p>The primary fusion reaction in most stars is the proton-proton chain. This reaction, which occurs at temperatures above 4 million degrees Celsius, combines four hydrogen nuclei to form one helium nucleus, releasing a tremendous amount of energy in the process. This energy is what makes stars shine.&lt;/p>
$$
E_\text{supernova} \approx 10^{44} , \text{J}
$$&lt;p>This energy is sufficient to synthesize and distribute heavy elements throughout space. The shock waves and extreme conditions during a supernova enable rapid neutron capture processes (r-process), producing elements heavier than iron, including gold, platinum, and uranium.&lt;/p>
&lt;p>The material ejected from supernovae enriches the interstellar medium with heavy elements. This enriched material then becomes part of new star-forming regions, continuing the cycle of element brokerage. The mass ejected in a typical supernova can be estimated using:
&lt;/p>
$$
M_\text{ejected} = M_\text{initial} - M_\text{remnant}
$$&lt;p>In more massive stars, where temperatures exceed 15 million degrees Celsius, the CNO cycle becomes dominant. This cycle involves carbon, nitrogen, and oxygen as catalysts to convert hydrogen into helium.&lt;/p>
$$
\begin{aligned}
^{12}\text{C} + ^1\text{H} &amp;\rightarrow ^{13}\text{N} + \gamma \\
^{13}\text{N} &amp;\rightarrow ^{13}\text{C} + e^+ + \nu_e \\
^{13}\text{C} + ^1\text{H} &amp;\rightarrow ^{14}\text{N} + \gamma \\
^{14}\text{N} + ^1\text{H} &amp;\rightarrow ^{15}\text{O} + \gamma \\
^{15}\text{O} &amp;\rightarrow ^{15}\text{N} + e^+ + \nu_e \\
^{15}\text{N} + ^1\text{H} &amp;\rightarrow ^{12}\text{C} + ^4\text{He}
\end{aligned}
$$&lt;p>As stars age, they progress through various stages of nuclear fusion, synthesizing progressively heavier elements. This process, known as stellar nucleosynthesis, is the primary means by which the universe creates elements heavier than helium. The general equation for nuclear fusion can be expressed as:&lt;/p>
$$
_Z^A\text{X} + _Z^A\text{Y} \rightarrow _{Z+Z'}^{A+A'}\text{W} + \text{energy}
$$&lt;p>Where $X$ and $Y$ are the initial nuclei, $W$ is the resulting nucleus, $Z$ is the atomic number, and $A$ is the mass number.&lt;/p>
&lt;p>In the cores of massive stars, temperatures and pressures become high enough to fuse elements up to iron (Fe). The production of elements beyond iron requires energy input rather than release, which occurs during supernova explosions.&lt;/p>
&lt;h2 id="cosmic-distribution">Cosmic Distribution&lt;/h2>
&lt;hr>
&lt;p>When massive stars exhaust their fuel, they explode in spectacular supernovae. These cosmic explosions are crucial to the role of stars as element brokers. The energy released in a supernova is immense, typically around $10^{44}$ joules. This energy is sufficient to synthesize and distribute heavy elements throughout space.&lt;/p>
$$
E_\text{supernova} \approx 10^{44} \, \text{J}
$$&lt;p>The shock waves and extreme conditions during a supernova enable rapid neutron capture processes (r-process), producing elements heavier than iron, including gold, platinum, and uranium. The material ejected from supernovae enriches the interstellar medium with heavy elements. This enriched material then becomes part of new star-forming regions, continuing the cycle of element brokerage.&lt;/p>
&lt;p>The mass ejected in a typical supernova can be estimated using:&lt;/p>
$$
M_\text{ejected} = M_\text{initial} - M_\text{remnant}
$$&lt;p>Where $M_\text{initial}$ is the mass of the star before the supernova, and $M_\text{remnant}$ is the mass of the resulting neutron star or black hole.&lt;/p>
&lt;p>Over cosmic timescales, this process leads to a gradual increase in the metallicity of the universe. The metallicity, $Z$, is defined as the fraction of elements heavier than helium:&lt;/p>
$$
Z = 1 - (X + Y)
$$&lt;p>Where $X$ is the mass fraction of hydrogen and $Y$ is the mass fraction of helium.&lt;/p>
&lt;p>Through their life cycles, from birth to supernova, stars accumulate, transform, and distribute matter across vast distances and timescales. This cosmic alchemy has shaped the chemical evolution of the universe. As generations of stars have lived and died, they have progressively enriched the cosmos with heavier elements, leading to increasing complexity in the universe.&lt;/p></description></item><item><title>Alle Farben</title><link>http://localhost:1313/blog/alle-farben/</link><pubDate>Sun, 20 Aug 2023 11:27:05 +0200</pubDate><guid>http://localhost:1313/blog/alle-farben/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Change directory to my blog in the most extravagant way.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">blog&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Set-Location&lt;/span> &lt;span class="n">-Path&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">Join-Path&lt;/span> &lt;span class="n">-Path&lt;/span> &lt;span class="nv">$env:USERPROFILE&lt;/span> &lt;span class="n">-ChildPath&lt;/span> &lt;span class="s2">&amp;#34;code\blog&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Okay, he got a bit out of hand with this one, but.. I did torture ChatGPT today with some more Python and Excel.&lt;/p>
&lt;figure>&lt;img src="http://localhost:1313/images/rose-colorscheme.png"
alt="Screenshot of an Excel spreadsheet.">&lt;figcaption>
&lt;p>This took me a really long time to make, okay?&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Let&amp;rsquo;s make him extract color values from column A without the header and put them in a JSON file.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">openpyxl&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Load the Excel workbook with macros&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">workbook_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Rose Pine Colorscheme.xlsm&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">workbook&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">openpyxl&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load_workbook&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">workbook_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">read_only&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data_only&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Specify the sheet name where your data is located&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sheet_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Rosé Pine&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Get the active worksheet&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">worksheet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">workbook&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">sheet_name&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Extract data from the first column (column A) starting from the second row (row 2)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">row&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">worksheet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">iter_rows&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">min_row&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max_col&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">values_only&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cell_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">cell_value&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cell_value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Create a dictionary to store the data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">data_dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;colors&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Save the data as JSON&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output_json_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;output.json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">output_json_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">json_file&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data_dict&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">json_file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">indent&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Data extracted and saved as JSON successfully.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Great, now do it for every sheet, but watch out, I put unicode in the sheet name!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Create a dictionary to store data from all sheets&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">all_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Loop through all sheets in the workbook&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">sheet&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">workbook&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Extract data from the first column (column A) starting from the second row&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">row&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">sheet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">iter_rows&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">min_row&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max_col&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">values_only&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cell_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">cell_value&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cell_value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Store the data in the dictionary using the sheet name as the key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Use sheet.title.encode(&amp;#39;utf-8&amp;#39;) to encode the sheet name to UTF-8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">all_data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">sheet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Save all data as JSON with ensure_ascii=False to preserve Unicode characters&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output_json_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;output.json&amp;#34;&lt;/span> &lt;span class="c1"># Replace with the desired output path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">output_json_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">json_file&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">all_data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">json_file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">indent&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ensure_ascii&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Data from all sheets extracted and saved as JSON successfully.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Amazing job so far, lets use the color names in column B as keys for the color values.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Loop through all sheets in the workbook&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">sheet&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">workbook&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Extract data from columns A and B starting from the second row (row 2)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">row&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">sheet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">iter_rows&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">min_row&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max_col&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">values_only&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">color_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">color_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">color_name&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="kc">None&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">color_value&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">color_value&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">color_name&lt;/span> &lt;span class="c1"># Reversed order&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now be a good machine an take those hexadecimal color values from column A and convert them to RGB and HSL values, making whoever entered them manually feel irrelevant at his work:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">openpyxl&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">colorsys&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Load the Excel workbook with macros&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">workbook_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Rose Pine Colorscheme.xlsm&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">workbook&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">openpyxl&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load_workbook&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">workbook_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">read_only&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data_only&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Specify the sheet name where your data is located&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sheet_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Rosé Pine&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Get the active worksheet&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">worksheet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">workbook&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">sheet_name&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Iterate through the rows starting from the second row (row 2)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">row&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">worksheet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">iter_rows&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">min_row&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max_col&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">values_only&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cell_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">cell_value&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Convert hex color value to RGB&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">hex_color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cell_value&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lstrip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;#&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rgb_color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">tuple&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hex_color&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Convert RGB to HSL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">g&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">255.0&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">rgb_color&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">h&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">l&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">colorsys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rgb_to_hls&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">g&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Format HSL values as integers in the range 0-360 (hue) and 0-100 (saturation and lightness)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">h&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">360&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Print Hex, RGB, and HSL values&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Hex: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">cell_value&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, RGB: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">rgb_color&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, HSL: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Conversion from hex to RGB and HSL completed.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can find the full scripts and the example spreadsheet on my
.&lt;/p></description></item><item><title>Green Tea</title><link>http://localhost:1313/blog/green-tea/</link><pubDate>Fri, 18 Aug 2023 16:08:56 +0200</pubDate><guid>http://localhost:1313/blog/green-tea/</guid><description>&lt;figure>&lt;img src="http://localhost:1313/images/teacupandpot.png"
alt="Alt Text">&lt;figcaption>
&lt;p>Embracing comfort has been the highlight of my midlife crisis!&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>I switched from slurping coffee to sipping green tea, and let me tell you, it has been an amazing experience. While I know people usually discard their first infusions because of its strength, I just dose it out for a 5 minute hot water bath. But I also tried out crushing up the leaves with mortar and pestle and gulping down the resulting &amp;ldquo;snuff&amp;rdquo;. It was quite mind opening. It also made me realize how a bit sinister plant, coffee is.&lt;/p>
&lt;p>It&amp;rsquo;s true! I&amp;rsquo;m delusional about the importance of my health at the moment. I&amp;rsquo;ve just been through a 15-year kerfuffle with various substances that almost feels like plants are hypnotizing us to devour them. In fact, caffeine and other alkaloids were originally designed to combat the insect infection that started 385 million years ago. Since those days, receptors in our bodies shifted positions, and what used to kill ants now gives us all kinds of highs. This gives me the scary thought: what will happen to us once plants start actually defending against us?&lt;/p>
&lt;p>However, I don&amp;rsquo;t want to be high on anything right now or worry about scary things. I need to learn German after 4 years of being a bumbling idiot. But it&amp;rsquo;s a pretty challenging feat to accomplish, even without the irresistible urges I managed to train myself to have, like smoking and drinking coffee, along with many worse things. But those worse things are over, and I&amp;rsquo;m gaining a newfound resonance with my body. It tells me things if I stop pretending that &amp;ldquo;doing this&amp;rdquo; and &amp;ldquo;doing that&amp;rdquo; are important for a moment.&lt;/p>
&lt;p>Lacking a direct line to our hearing system, it only lets us know we are doing harm to it in subtle ways, such as making our stomach upset, that is, if we didn&amp;rsquo;t mute those signals with smoking first thing after getting out of bed. It&amp;rsquo;s weird and messed up, but this is the system we have to work with for now, and I don&amp;rsquo;t intend to skip breakfast for long.&lt;/p>
&lt;figure>&lt;img src="http://localhost:1313/images/lotsofglasscontainers.png"
alt="Alt Text">&lt;figcaption>
&lt;p>Although not this extravagant, my collection also catches the eye of any unsuspecting visitor who enters the kitchen.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>In fact, experimenting with various flakes, seeds, and berries to create the perfect crunchy breakfast has been one of the many small steps I&amp;rsquo;ve taken to battle my smoking addiction. However, I&amp;rsquo;m well aware that this doesn&amp;rsquo;t have to be a fight. I&amp;rsquo;ve already done it once—combined things together and accidentally stopped being an alcoholic. Unlike normal people, I got to skip the usual long and highly unsuccessful battle with booze and jump right into being upset about my old behavior.&lt;/p>
&lt;p>Besides cleaning my room of empty flasks, I&amp;rsquo;ve also cleared up in my head. But the change was very traumatic, happening so fast. After all, I spent 6 years slowly increasing the dosage of my daily poison intake. The result was that I went crazy, not knowing what to do with all this free time I&amp;rsquo;m now spending thinking clearly and not being passed out. 8 months later, I&amp;rsquo;m still that way. This is probably why I&amp;rsquo;m capable of hitting paragraph after paragraph, but I&amp;rsquo;m okay with letting myself cope with things.&lt;/p>
&lt;p>Something in our brain is wired quite strangely, possibly because the engineer was in a hurry to ship the finished product. Which makes you think, upon making blood-barrier contact with the plant, that you should dedicate the rest of your life to the art of smoking it. Some decades pass, and you find yourself very stupid for ignoring every warning label and the horrid pictures of deformed organs that lie on the box when your health becomes subpar.&lt;/p>
&lt;p>Well fuck this shit, I say it&amp;rsquo;s time for our race to become smarter, deciding for the good of everyone, whether stupid or smart, to limit our access to this plant. At the very least, we shouldn&amp;rsquo;t allow people to profit from it. It&amp;rsquo;s crazy to think we&amp;rsquo;ve let this happen for well over a century.&lt;/p>
&lt;p>With all these amazing new technologies, there&amp;rsquo;s no way we can&amp;rsquo;t find a molecule that lets us turn off these cravings for good, fixing a design flaw in us. Do I really need to go to a university and learn chemistry so I can fix this myself?&lt;/p></description></item><item><title>Early Steps</title><link>http://localhost:1313/blog/early-steps/</link><pubDate>Fri, 18 Aug 2023 12:08:30 +0200</pubDate><guid>http://localhost:1313/blog/early-steps/</guid><description>&lt;figure>&lt;img src="http://localhost:1313/images/manvsmachine.png"
alt="AI Generated caricature.">&lt;figcaption>
&lt;p>Men slowly starting to interface with the machines other men built for them. Glorious!&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>I accidentally dropped out of society for a few years, and upon my return, I discovered the presence of peculiar machines that we can converse with, and which possess extensive knowledge about various subjects. I have no trepidation concerning GPUs, so let&amp;rsquo;s embark on a deep exploration of this novel &amp;lsquo;disruptive&amp;rsquo; technology together. Below, you will find a graveyard of both useful and useless scripts, composed individually by machines or with minimal assistance from this hairy monkey. It&amp;rsquo;s worth noting that these scripts should not be executed, but rather studied by the vigilant, perhaps even the overly cautious..&lt;/p>
&lt;h2 id="powershell">PowerShell&lt;/h2>
&lt;p>I was too lazy to figure out this new scripting language people use now by the traditional learning methods, so I asked GPT to help me with these useful snippets.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Start my hugo blog locally.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">serve&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">param&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="no">int&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nv">$Port&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mf">1313&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$hugoExecutable&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$env:LOCALAPPDATA&lt;/span>&lt;span class="s2">\hugo-extended-0.117.0\hugo.exe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$workingDirectory&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$env:USERPROFILE&lt;/span>&lt;span class="s2">\code\cringe.live\&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">Test-Path&lt;/span> &lt;span class="nv">$hugoExecutable&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">Test-Path&lt;/span> &lt;span class="nv">$workingDirectory&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Set-Location&lt;/span> &lt;span class="n">-Path&lt;/span> &lt;span class="nv">$workingDirectory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;amp;&lt;/span> &lt;span class="nv">$hugoExecutable&lt;/span> &lt;span class="n">server&lt;/span> &lt;span class="n">-p&lt;/span> &lt;span class="nv">$Port&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Write-Host&lt;/span> &lt;span class="s2">&amp;#34;Working directory not found at &lt;/span>&lt;span class="nv">$workingDirectory&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Write-Host&lt;/span> &lt;span class="s2">&amp;#34;Hugo executable not found at &lt;/span>&lt;span class="nv">$hugoExecutable&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Get a random quote from a JSON file.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">fortune&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">param&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="no">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nv">$JsonFilePath&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$env:USERPROFILE&lt;/span>&lt;span class="s2">\code\motivation.json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c"># Read the JSON file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$jsonContent&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">Get-Content&lt;/span> &lt;span class="n">-Raw&lt;/span> &lt;span class="n">-Path&lt;/span> &lt;span class="nv">$JsonFilePath&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$quotes&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">ConvertFrom-Json&lt;/span> &lt;span class="nv">$jsonContent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c"># Get a random index within the range of quotes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$randomIndex&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">Get-Random&lt;/span> &lt;span class="n">-Minimum&lt;/span> &lt;span class="mf">0&lt;/span> &lt;span class="n">-Maximum&lt;/span> &lt;span class="nv">$quotes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Count&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c"># Retrieve the random quote and display it&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$randomQuote&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nv">$quotes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nv">$randomIndex&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Write-Output&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">`n&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="p">$(&lt;/span>&lt;span class="nv">$randomQuote&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Quote&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="se">`n&lt;/span>&lt;span class="s2"> -- &lt;/span>&lt;span class="p">$(&lt;/span>&lt;span class="nv">$randomQuote&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Author&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="se">`n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Present a random quote for motivation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fortune&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="working-with-data">Working with Data&lt;/h2>
&lt;h3 id="color-excel-tables-by-hex">Color Excel tables by HEX&lt;/h3>
&lt;p>I found this neat VBA Script that colors cells automatically if you enter hex color codes in Excel:&lt;/p>
&lt;div class="video-wrapper">
&lt;video
controls
src="hexcolors-excel.mp4"
autoplay
>
&lt;p>
Your browser doesn't support HTML5 video. Here is a
&lt;a href="hexcolors-excel.mp4">link to the video&lt;/a> instead.
&lt;/p>
&lt;/video>
&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-vb" data-lang="vb">&lt;span class="line">&lt;span class="cl">&lt;span class="k">Private&lt;/span> &lt;span class="k">Sub&lt;/span> &lt;span class="nf">Worksheet_Change&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">ByVal&lt;/span> &lt;span class="n">Target&lt;/span> &lt;span class="ow">As&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">On&lt;/span> &lt;span class="k">Error&lt;/span> &lt;span class="k">GoTo&lt;/span> &lt;span class="n">bm_Safe_Exit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EnableEvents&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">Dim&lt;/span> &lt;span class="n">rng&lt;/span> &lt;span class="ow">As&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">clr&lt;/span> &lt;span class="ow">As&lt;/span> &lt;span class="kt">String&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">For&lt;/span> &lt;span class="k">Each&lt;/span> &lt;span class="n">rng&lt;/span> &lt;span class="ow">In&lt;/span> &lt;span class="n">Target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">If&lt;/span> &lt;span class="n">Len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rng&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Value2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">6&lt;/span> &lt;span class="k">Then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">clr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rng&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Value2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rng&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Interior&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Color&lt;/span> &lt;span class="o">=&lt;/span> _
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">RGB&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Hex2Dec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Left&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">)),&lt;/span> _
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Hex2Dec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Mid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">)),&lt;/span> _
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Hex2Dec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Right&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">End&lt;/span> &lt;span class="k">If&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">Next&lt;/span> &lt;span class="n">rng&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">bm_Safe_Exit&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EnableEvents&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">End&lt;/span> &lt;span class="k">Sub&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I asked ChatGPT nicely to make it match with the &lt;code>#000000&lt;/code> format instead.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-vb" data-lang="vb">&lt;span class="line">&lt;span class="cl">&lt;span class="k">Private&lt;/span> &lt;span class="k">Sub&lt;/span> &lt;span class="nf">Worksheet_Change&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">ByVal&lt;/span> &lt;span class="n">Target&lt;/span> &lt;span class="ow">As&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">On&lt;/span> &lt;span class="k">Error&lt;/span> &lt;span class="k">GoTo&lt;/span> &lt;span class="n">bm_Safe_Exit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EnableEvents&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">Dim&lt;/span> &lt;span class="n">rng&lt;/span> &lt;span class="ow">As&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">clr&lt;/span> &lt;span class="ow">As&lt;/span> &lt;span class="kt">String&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">For&lt;/span> &lt;span class="k">Each&lt;/span> &lt;span class="n">rng&lt;/span> &lt;span class="ow">In&lt;/span> &lt;span class="n">Target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">If&lt;/span> &lt;span class="n">Left&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rng&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Value2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;#&amp;#34;&lt;/span> &lt;span class="ow">And&lt;/span> &lt;span class="n">Len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rng&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Value2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">7&lt;/span> &lt;span class="k">Then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">clr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Mid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rng&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Value2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rng&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Interior&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">RGB&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Hex2Dec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Left&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">)),&lt;/span> _
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Hex2Dec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Mid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">)),&lt;/span> _
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Hex2Dec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Right&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">End&lt;/span> &lt;span class="k">If&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">Next&lt;/span> &lt;span class="n">rng&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">bm_Safe_Exit&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EnableEvents&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">End&lt;/span> &lt;span class="k">Sub&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A bit safer in case I ever end up using an instrument with 6 numbers for a name..&lt;/p>
&lt;p>But what I would never be able to figure out, because I never became a Visual Basic Instructor in a previous reincarnation, is how to run all this on column D only.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-vb" data-lang="vb">&lt;span class="line">&lt;span class="cl">&lt;span class="k">Private&lt;/span> &lt;span class="k">Sub&lt;/span> &lt;span class="nf">Worksheet_Change&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">ByVal&lt;/span> &lt;span class="n">Target&lt;/span> &lt;span class="ow">As&lt;/span> &lt;span class="n">Range&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EnableEvents&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">If&lt;/span> &lt;span class="k">Not&lt;/span> &lt;span class="n">Intersect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Target&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">Me&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;D:D&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="ow">Is&lt;/span> &lt;span class="k">Nothing&lt;/span> &lt;span class="k">Then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">Dim&lt;/span> &lt;span class="n">rng&lt;/span> &lt;span class="ow">As&lt;/span> &lt;span class="n">Range&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">For&lt;/span> &lt;span class="k">Each&lt;/span> &lt;span class="n">rng&lt;/span> &lt;span class="ow">In&lt;/span> &lt;span class="n">Target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">If&lt;/span> &lt;span class="n">Left&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rng&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Value2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;#&amp;#34;&lt;/span> &lt;span class="ow">And&lt;/span> &lt;span class="n">Len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rng&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Value2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">7&lt;/span> &lt;span class="k">Then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rng&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Interior&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">RGB&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Hex2Dec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Mid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rng&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Value2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">)),&lt;/span> _
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Hex2Dec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Mid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rng&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Value2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">)),&lt;/span> _
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Hex2Dec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Right&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rng&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Value2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">End&lt;/span> &lt;span class="k">If&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">Next&lt;/span> &lt;span class="n">rng&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">End&lt;/span> &lt;span class="k">If&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EnableEvents&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">End&lt;/span> &lt;span class="k">Sub&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="get-random-quote-from-csv">Get random quote from .csv&lt;/h3>
&lt;p>In case you need to manipulate CSV files with Python or access the data randomly or predictably during your travels, ChatGPT can assist you.&lt;/p>
&lt;p>&lt;code>motivational-quotes.csv&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;The only way to do great work is to love what you do.&amp;#34;&amp;#34; - Steve Jobs&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;Success is not final, failure is not fatal: It is the courage to continue that counts.&amp;#34;&amp;#34; - Winston Churchill&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;Believe you can and you&amp;#39;re halfway there.&amp;#34;&amp;#34; - Theodore Roosevelt&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;The future depends on what you do today.&amp;#34;&amp;#34; - Mahatma Gandhi&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;Don&amp;#39;t watch the clock; do what it does. Keep going.&amp;#34;&amp;#34; - Sam Levenson&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;Success is walking from failure to failure with no loss of enthusiasm.&amp;#34;&amp;#34; - Winston S. Churchill&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;The harder you work for something, the greater you&amp;#39;ll feel when you achieve it.&amp;#34;&amp;#34; - Unknown&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;The only limit to our realization of tomorrow will be our doubts of today.&amp;#34;&amp;#34; - Franklin D. Roosevelt&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;Your time is limited, don&amp;#39;t waste it living someone else&amp;#39;s life.&amp;#34;&amp;#34; - Steve Jobs&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;&amp;#34;&amp;#34;You are never too old to set another goal or to dream a new dream.&amp;#34;&amp;#34; - C.S. Lewis&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>random-quote-from-csv.py&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">csv&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">random&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_random_quote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">csv_file&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">csv_file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newline&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">csv&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">quotes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">quotes&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;No quotes found in the CSV file.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">random_quote&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">choice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">quotes&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">random_quote&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">csv_filename&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;motivational-quotes.csv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">random_quote&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">get_random_quote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">csv_filename&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">random_quote&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>